CREATE TABLE BATCH (
	ID_BATCH serial NOT NULL,
	COD_BATCH varchar(25) NOT NULL,
	ID_RECEIVER integer NOT NULL,
	ID_OWNER integer NOT NULL,
	ID_REMEANING_TIME varchar(60) NOT NULL,
	DAT_CREATION DATE NOT NULL,
	BATCH_STATUS VARCHAR(255) NOT NULL,
	BATCH_REFERENCE_CODE VARCHAR(255) NOT NULL UNIQUE,
	ID_AUTH integer NOT NULL,
	ID_DRIVER integer NOT NULL,
	CONSTRAINT BATCH_pk PRIMARY KEY (ID_BATCH)
) WITH (
  OIDS=FALSE
);



CREATE TABLE RECEIVER (
	ID_RECEIVER serial NOT NULL,
	RECEIVER_NAME VARCHAR(255) NOT NULL,
	ID_ADDRESS integer NOT NULL,
	RECEIVER_DOCUMENT DECIMAL NOT NULL,
	DAT_CREATION DATE NOT NULL,
	CONSTRAINT RECEIVER_pk PRIMARY KEY (ID_RECEIVER)
) WITH (
  OIDS=FALSE
);



CREATE TABLE OWNER (
	ID_OWNER serial NOT NULL,
	OWENER_NAME VARCHAR(255) NOT NULL,
	ID_ADDRESS integer NOT NULL,
	OWENER_DOCUMENT VARCHAR(255) NOT NULL,
	OWNER_REPUTATION VARCHAR(255) NOT NULL,
	DAT_CREATION DATE NOT NULL,
	CONSTRAINT OWNER_pk PRIMARY KEY (ID_OWNER)
) WITH (
  OIDS=FALSE
);



CREATE TABLE ADDRESS (
	ID_ADDRESS serial NOT NULL,
	CEP VARCHAR(255) NOT NULL,
	STREET VARCHAR(255) NOT NULL,
	BLOCK VARCHAR(255) NOT NULL,
	NUMBER VARCHAR(255) NOT NULL,
	CITY VARCHAR(255) NOT NULL,
	DAT_CREATION DATE NOT NULL,
	CONSTRAINT ADDRESS_pk PRIMARY KEY (ID_ADDRESS)
) WITH (
  OIDS=FALSE
);



CREATE TABLE REGISTRY (
	REGISTRY_ID serial NOT NULL,
	REGISTRY_DESCRIPTION VARCHAR(255) NOT NULL,
	REGISTRY_REFERENCE_CODE VARCHAR(255) NOT NULL,
	ID_STATION integer NOT NULL,
	ESTIMATE_TIME VARCHAR(255) NOT NULL,
	DAT_CREATION VARCHAR(255) NOT NULL,
	BATCH_ID integer NOT NULL,
	CONSTRAINT REGISTRY_pk PRIMARY KEY (REGISTRY_ID)
) WITH (
  OIDS=FALSE
);



CREATE TABLE AUDITY (
	ID_AUDITY serial NOT NULL,
	AUDITY_REFERENCE_CODE VARCHAR(255) NOT NULL,
	AUDITY_HOST VARCHAR(255) NOT NULL,
	AUDITY_RESPONSE VARCHAR(255) NOT NULL,
	AUDITY_STATUS VARCHAR(255) NOT NULL,
	DAT_CREATION VARCHAR(255) NOT NULL,
	CONSTRAINT AUDITY_pk PRIMARY KEY (ID_AUDITY)
) WITH (
  OIDS=FALSE
);



CREATE TABLE STATION (
	ID_STATION serial NOT NULL,
	STATION_NAME VARCHAR(255) NOT NULL,
	STATION_OWNER VARCHAR(255) NOT NULL,
	STATION_NUMBER VARCHAR(255) NOT NULL,
	STATION_CODE VARCHAR(255) NOT NULL,
	STATION_EMAIL VARCHAR(255) NOT NULL,
	DAT_CREATION VARCHAR(255) NOT NULL,
	CONSTRAINT STATION_pk PRIMARY KEY (ID_STATION)
) WITH (
  OIDS=FALSE
);



CREATE TABLE DRIVER (
	ID_DRIVER serial NOT NULL,
	DRIVER_NAME VARCHAR(255) NOT NULL,
	DRIVER_DOCUMENT VARCHAR(255) NOT NULL,
	ID_ADDRESS integer NOT NULL,
	DRIVER_CODE VARCHAR(255) NOT NULL,
	DRIVER_REPUTATION VARCHAR(255) NOT NULL,
	DRIVER_STATUS VARCHAR(255) NOT NULL,
	DAT_CREATION VARCHAR(255) NOT NULL,
	CONSTRAINT DRIVER_pk PRIMARY KEY (ID_DRIVER)
) WITH (
  OIDS=FALSE
);



CREATE TABLE PRICING (
	ID_PRICING serial NOT NULL,
	GAS FLOAT NOT NULL,
	APP_TAX FLOAT NOT NULL,
	DISTANCE FLOAT NOT NULL,
	DAT_CREATION DATE NOT NULL,
	ACTIVE BOOLEAN NOT NULL,
	CONSTRAINT PRICING_pk PRIMARY KEY (ID_PRICING)
) WITH (
  OIDS=FALSE
);



CREATE TABLE AUTH (
	ID_AUTH serial NOT NULL,
	AUTHHORIZED BOOLEAN NOT NULL,
	DANFE_NUMBER VARCHAR(255) NOT NULL,
	STATUS VARCHAR(255) NOT NULL,
	DAT_CREATION VARCHAR(255) NOT NULL,
	VALIDATIONS_EXECUTED VARCHAR(255) NOT NULL,
	CONSTRAINT AUTH_pk PRIMARY KEY (ID_AUTH)
) WITH (
  OIDS=FALSE
);



ALTER TABLE BATCH ADD CONSTRAINT BATCH_fk0 FOREIGN KEY (ID_RECEIVER) REFERENCES RECEIVER(ID_RECEIVER);
ALTER TABLE BATCH ADD CONSTRAINT BATCH_fk1 FOREIGN KEY (ID_OWNER) REFERENCES OWNER(ID_OWNER);
ALTER TABLE BATCH ADD CONSTRAINT BATCH_fk2 FOREIGN KEY (ID_AUTH) REFERENCES AUTH(ID_AUTH);
ALTER TABLE BATCH ADD CONSTRAINT BATCH_fk3 FOREIGN KEY (ID_DRIVER) REFERENCES DRIVER(ID_DRIVER);

ALTER TABLE RECEIVER ADD CONSTRAINT RECEIVER_fk0 FOREIGN KEY (ID_ADDRESS) REFERENCES ADDRESS(ID_ADDRESS);

ALTER TABLE OWNER ADD CONSTRAINT OWNER_fk0 FOREIGN KEY (ID_ADDRESS) REFERENCES ADDRESS(ID_ADDRESS);


ALTER TABLE REGISTRY ADD CONSTRAINT REGISTRY_fk0 FOREIGN KEY (ID_STATION) REFERENCES STATION(ID_STATION);
ALTER TABLE REGISTRY ADD CONSTRAINT REGISTRY_fk1 FOREIGN KEY (BATCH_ID) REFERENCES BATCH(ID_BATCH);



ALTER TABLE DRIVER ADD CONSTRAINT DRIVER_fk0 FOREIGN KEY (ID_ADDRESS) REFERENCES ADDRESS(ID_ADDRESS);
